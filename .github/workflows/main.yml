name: Python CI with pipenv

on:
  pull_request: {}
  push:
    branches:
      - 'main'
      - 'feature/**'
    paths-ignore:
      - '**.md'
      - '_config.yml'
      - '**.tweet'
  # Scheduled workflows run on the latest commit on the default or base branch.
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
  # Cron syntax has five fields separated by a space, and each field represents a unit of time.
  # ┌───────────── minute (0 - 59)
  # │ ┌───────────── hour (0 - 23)
  # │ │ ┌───────────── day of the month (1 - 31)
  # │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
  # │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
  # │ │ │ │ │
  # │ │ │ │ │
  # │ │ │ │ │
  # * * * * *
  schedule:
    # Schedule at 00:00 on Tuesday, Thursday, and Saturday, https://crontab.guru/#0_0_*_*_2,4,6
    - cron: '0 0 * * 2,4,6'

jobs:
  static-code-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/project-environment-setup
      - run: pipenv run isort --recursive --diff .
      - run: pipenv run black --check .
      - run: pipenv run flake8
      - name: Install mypy types
        run: |
          yes | pipenv run mypy --install-types \
          || test $? -eq 2 && echo "Installed mypy types successfully" \
          || echo "Failed to install mypy types"
      - run: pipenv run mypy
      - name: Python Tests with pytest
        run: LOG_LEVEL=INFO pipenv run pytest --cov --cov-fail-under=90 --capture=no --log-cli-level=INFO -n auto
  pyinstaller-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/project-environment-setup
      - name: Build Application Executable Package with PyInstaller
        run: |
          pipenv run pyinstaller --windowed --noconsole \
            --add-data "setup.cfg:." \
            --add-data "pysimplegui_boilerplate/resources/:pysimplegui_boilerplate/resources/" \
            --name pysimplegui_boilerplate \
            --clean --noconfirm pysimplegui_boilerplate/__main__.py
      - name: Display Built Artifacts
        run: |
          du -s -h *
      - name: Smoke Test PyInstaller Application (10 seconds timeout)
        id: smoke-test-py-installer-application
        run: timeout 10 ./dist/pysimplegui_boilerplate/pysimplegui_boilerplate
        continue-on-error: true
      - name: Assert Previous Step Was Failure
        run: echo "Result of smoke-test-py-installer-application was '${{ steps.smoke-test-py-installer-application.outcome }}'"
